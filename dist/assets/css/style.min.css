html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}ul{margin:0;padding:0;list-style:none}button,input[type=submit]{display:inline-block;box-shadow:none;background-color:transparent;background:none;cursor:pointer;border:none;padding:0}button:active,button:focus,input:active,input:focus{outline:none}button::-moz-focus-inner{padding:0;border:0}a{text-decoration:none}*{padding:0;margin:0;border:none}*,:after,:before{box-sizing:border-box}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit;margin:0}body{font-family:Comfortaa,cursive;background-color:#f3f6fd;font-weight:400}.app{display:flex}.app .panel{background-color:#fbfaff;align-items:center;gap:48px;padding:28px 29px;min-height:100vh}.app .panel,.app .panel .menu{display:flex;flex-direction:column}.app .panel .menu{gap:25px}.app .panel .menu__list{display:flex;gap:25px;flex-direction:column}.app .panel .menu__list .menu__btn{width:45px;height:45px;background-color:#fff;box-shadow:0 8px 14px rgba(62,107,224,.12);border-radius:14px}.app .panel .menu__list .menu__btn:hover{background-color:#6a6afb}.app .panel .menu__list .menu__btn:hover img{filter:brightness(0) invert(1)}.app .panel .menu__list .menu__btn--active{background-color:#5051f9}.app .panel .menu__list .menu__btn--active img{filter:brightness(0) invert(1)}.app .panel .menu__add{border:1px solid #cad5ff;border-radius:14px;width:45px;height:45px}.app .panel .menu__add:hover{background-color:#eff2ff}.app .content{min-width:900px;padding:45px}.app .content .header{display:flex;justify-content:space-between;align-items:center}.app .content .header__title{font-size:30px;line-height:33px;color:#000}.app .content .header .progress{display:flex;flex-direction:column;gap:12px}.app .content .header .progress__text{display:flex;gap:127px;align-items:center}.app .content .header .progress__text .progress__name{font-size:14px;line-height:16px;color:#232360}.app .content .header .progress__text .progress__percent{font-size:12px;line-height:13px;color:#768396}.app .content .header .progress__bar{width:100%;background-color:#e6e9ed;border-radius:4px;height:5px}.app .content .header .progress__bar .progress__cover-bar{background-color:#5051f9;transition:all .5s;border-radius:4px;height:5px}.app .content .main__content{margin-top:36px}.app .content .habbit{background-color:#fff;border-radius:10px;display:flex;align-items:center;margin-bottom:12px}.app .content .habbit__day{font-weight:600;font-size:14px;line-height:16px;color:#000;background-color:#fbfaff;padding:19px 40px;border-radius:10px 0 0 10px;border-right:1px solid #e7ebfb}.app .content .habbit__comment{font-weight:500;font-size:16px;line-height:18px;color:#23235f;padding-left:24px}.app .content .habbit .delete{margin-left:auto;padding:2px;margin-right:6px;border-radius:5px}.app .content .habbit .delete:hover{background-color:#eff2ff}.app .content .habbit__form{display:flex;font-weight:500;font-size:16px;line-height:18px;color:#23235f;padding-left:24px;position:relative}.app .content .habbit__form .input__icon{border:1px solid #e7ebfb;padding:11px 0 11px 48px;border-radius:9px;width:521px}.app .content .habbit__form .input__icon::placeholder{color:#8899a8}.app .content .habbit__form .comment__img{position:absolute;top:11px;left:45px}.app .content .habbit__form .habbit__btn{color:#5051f9;font-weight:500;font-size:13px;line-height:14px;padding:12px 32px;background-color:#edecfe;border-radius:9px;margin-left:8px}.app .content .habbit__form .habbit__btn:hover{background-color:#dcdaff}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
