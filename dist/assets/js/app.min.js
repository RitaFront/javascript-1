"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ownKeys(t,e){var r,n=Object.keys(t);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(t),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)),n}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(r),!0).forEach(function(e){_defineProperty(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}function _defineProperty(e,t,r){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}function _createForOfIteratorHelper(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var globalActiveHabbitId,habbits=[],HABBIT_KEY="HABBIT_KEY",page={menu:document.querySelector(".menu__list"),header:{title:document.querySelector(".header__title"),progressPersent:document.querySelector(".progress__percent"),progressCoverBar:document.querySelector(".progress__cover-bar")},body:{day:document.querySelector(".habbit__day"),comment:document.querySelector(".habbit__comment")},main:{content:document.querySelector(".main__content")},nextDay:{title:document.getElementById("next-day")}};function loadData(){var e=localStorage.getItem(HABBIT_KEY),e=JSON.parse(e);Array.isArray(e)&&(habbits=e)}function saveData(){localStorage.setItem(HABBIT_KEY,JSON.stringify(habbits))}function rerenderMenu(n){var o,t=_createForOfIteratorHelper(habbits);try{for(t.s();!(o=t.n()).done;)(function(){var e,t=o.value,r=document.querySelector('[menu-habbit-id="'.concat(t.id,'"]'));if(!r)return(e=document.createElement("button")).setAttribute("menu-habbit-id",t.id),e.classList.add("menu__btn"),e.addEventListener("click",function(){return rerender(t.id)}),e.innerHTML='<img src="./assets/images/'.concat(t.icon,'.svg" alt="').concat(t.name,'" />'),n.id===t.id&&e.classList.add("menu__btn--active"),page.menu.appendChild(e);n.id===t.id?r.classList.add("menu__btn--active"):r.classList.remove("menu__btn--active")})()}catch(e){t.e(e)}finally{t.f()}}function rerenderHead(e){page.header.title.innerText=e.name;e=1<e.days.length/e.target?100:e.days.length/e.target*100;page.header.progressPersent.innerText=e.toFixed(0)+" %",page.header.progressCoverBar.setAttribute("style","width: ".concat(e,"%"))}function rerenderBody(e){page.main.content.innerHTML="",page.nextDay.title.innerHTML="День ".concat(e.days.length+1);var t,r,n,o,a=0,i=_createForOfIteratorHelper(e.days);try{for(i.s();!(t=i.n()).done;){var c=t.value;r=c,n=++a,o=void 0,(o=document.createElement("div")).classList.add("habbit"),r='\n    <div class="habbit__day">День '.concat(n,'</div>\n              <div class="habbit__comment">\n                ').concat(r.comment,'\n              </div>\n              <button class="delete" onclick="deleteDay(').concat(n,')">\n                <img src="./assets/images/delete.svg" alt="Удалить" />\n              </button>\n    '),o.innerHTML=r,page.main.content.appendChild(o)}}catch(e){i.e(e)}finally{i.f()}}function rerender(t){globalActiveHabbitId=t;var e=habbits.find(function(e){return e.id===t});e&&(rerenderMenu(e),rerenderHead(e),rerenderBody(e))}function addDays(e){var t=e.target;e.preventDefault();var r=new FormData(t).get("comment");t.comment.classList.remove("error"),r||t.comment.classList.add("error"),habbits=habbits.map(function(e){return e.id===globalActiveHabbitId?_objectSpread(_objectSpread({},e),{},{days:e.days.concat({comment:r})}):e}),t.comment.value="",rerender(globalActiveHabbitId),saveData()}function deleteDay(t){habbits=habbits.map(function(e){return e.id===globalActiveHabbitId?(e.days.splice(t-1,1),_objectSpread(_objectSpread({},e),{},{days:e.days})):e}),rerender(globalActiveHabbitId),saveData()}loadData(),rerender(habbits[0].id);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
